version: 2.1

jobs:      
  create_infraestructure:
    docker:
        - image: circleci/node:14
    steps:
      - checkout
      - run:
          name: deploy-cloudFormation
          environment:
            AWS_CLI_STR_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_CLI_STR_PROFILE_NAME: $AWS_SECRET_ACCESS_KEY
          command: |
            aws cloudformation deploy --template-file .\vpc.yml \
            --tags project=proyecto-eks --region eu-west-3 --stack-name deploy-vpc \
            --parameter-overrides VpcBlock=192.168.0.0/16 \
            Subnet01Block=192.168.64.0/18 Subnet02Block=192.168.128.0/18 \
            Subnet03Block=192.168.192.0/18

      - run:
          name: obtain-information
          command: |
            list-subnets=$(aws ec2 describe-subnets --filters "Name=tag:aws:cloudformation:stack-name,Values=deploy-vpc" \
            --query "Subnets[*].SubnetId")
            security-group=$(aws ec2 describe-security-groups \
            --filters "Name=tag:aws:cloudformation:stack-name,Values=deploy-vpc" \
            --query "SecurityGroups[0].GroupId")

            aws eks --region us-east-1 create-cluster --name eks --role-arn arn:aws:iam::403107932867:role/CreateEKS \
            --resources-vpc-config subnetIds="$listSubnets",securityGroupIds=$securityGroup
  
  deploy_infraestructure:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Push application Docker image
          command: |
            login="$(docker login -u ${userdocker} -p ${passworddocker})"
            ${login}
            docker tag app "${userdocker}/app:${CIRCLE_SHA1}"
            docker push "${userdocker}/app:${CIRCLE_SHA1}"

  install_helm:
    docker:
      - image: cimg/python:3.10.7
    steps:
      - checkout
      - run:
          name: Install awscli
          command: |
            curl --silent "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" \
            -o "awscliv2.zip" && unzip awscliv2.zip && sudo ./aws/install
      - run:
          name: Install and configure kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s \
            https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && sudo install \
            -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && kubectl version --client
      - deploy:
          name: Deploy release
          command: |
            aws eks update-kubeconfig --region us-east-1 --name eks_2
            kubectl apply -f app-deployment.yml

workflows:
  default:
    jobs:
      - create_infraestructure:
        filters:
          branches:
            only: [deploy-infraestructure]
      - deploy_infraestructure
      - install_helm



